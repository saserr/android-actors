/*
 * Copyright 2017 the original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.android.build.gradle.LibraryPlugin

buildscript {

    project.ext {
        versionCode = 1
        versionName = '0.1'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

allprojects {

    repositories {
        jcenter()
    }

    plugins.withType(JavaPlugin).whenPluginAdded {
        version = project.versionName

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    plugins.withType(LibraryPlugin).whenPluginAdded {
        android {
            compileSdkVersion 26
            buildToolsVersion '26.0.1'

            defaultConfig {
                versionCode project.versionCode
                versionName project.versionName
                targetSdkVersion 26
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            buildTypes {
                debug {
                    testCoverageEnabled true
                }
            }
        }

        // Java 8 is not fully supported in library projects yet, see
        // https://code.google.com/p/android/issues/detail?id=211386
        // This is a temporary workaround to get at least lambdas compiling
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << '-Xbootclasspath/a:' + System.properties.get('java.home') + '/lib/rt.jar'
            }
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

final def assembled = [':api', ':core']
task assemble(type: Jar, dependsOn: assembled.collect({ "${it}:compileJava" })) {
    doFirst {
        destinationDir = rootProject.buildDir
        baseName = 'simple-actors'
        version = project.versionName
        from files(assembled.collect { project(it).sourceSets.main.output })
    }
}
